{"ast":null,"code":"var _jsxFileName = \"/home/giibbu/crypto-sa/client/src/pages/components/Fader.js\",\n    _s = $RefreshSig$();\n\n// Fader -- Fade in child elements\nimport { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Fader = ({\n  children\n}) => {\n  _s();\n\n  const [isVisible, setVisible] = useState(false);\n  const domRef = useRef();\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      // Check intersecting\n      if (entries[0].isIntersecting) {\n        // Set Visible\n        setVisible(true); // Unobserve\n\n        observer.unobserve(domRef.current);\n      }\n    });\n    observer.observe(domRef.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: domRef,\n    className: `fader ${isVisible ? \"is-visible\" : \"\"}`,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Fader, \"vRVZ8VjWDklRD4TrBfqZR50ZUu0=\");\n\n_c = Fader;\nexport default Fader;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fader\");","map":{"version":3,"sources":["/home/giibbu/crypto-sa/client/src/pages/components/Fader.js"],"names":["useState","useRef","useEffect","Fader","children","isVisible","setVisible","domRef","observer","IntersectionObserver","entries","isIntersecting","unobserve","current","observe"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AACXC,EAAAA;AADW,CAAD,KAER;AAAA;;AACF,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMO,MAAM,GAAGN,MAAM,EAArB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBC,OAAO,IAAI;AACjD;AACA,UAAIA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAf,EAA+B;AAC3B;AACAL,QAAAA,UAAU,CAAC,IAAD,CAAV,CAF2B,CAG3B;;AACAE,QAAAA,QAAQ,CAACI,SAAT,CAAmBL,MAAM,CAACM,OAA1B;AACH;AACJ,KARgB,CAAjB;AAUAL,IAAAA,QAAQ,CAACM,OAAT,CAAiBP,MAAM,CAACM,OAAxB;AACH,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACI;AAAK,IAAA,GAAG,EAAGN,MAAX;AAAoB,IAAA,SAAS,EAAG,SAASF,SAAS,GAAG,YAAH,GAAkB,EAAI,EAAxE;AAAA,cACMD;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAzBD;;GAAMD,K;;KAAAA,K;AA2BN,eAAeA,KAAf","sourcesContent":["// Fader -- Fade in child elements\nimport { useState, useRef, useEffect } from 'react';\n\nconst Fader = ({\n    children,\n}) => {\n    const [isVisible, setVisible] = useState(false);\n    const domRef = useRef();\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(entries => {\n            // Check intersecting\n            if (entries[0].isIntersecting) {\n                // Set Visible\n                setVisible(true);\n                // Unobserve\n                observer.unobserve(domRef.current);\n            }\n        });\n\n        observer.observe(domRef.current);\n    }, []);\n\n    return(\n        <div ref={ domRef } className={`fader ${ isVisible ? \"is-visible\" : \"\" }`}>\n            { children }\n        </div>\n    );\n}\n\nexport default Fader;"]},"metadata":{},"sourceType":"module"}