{"ast":null,"code":"var _jsxFileName = \"/home/giibbu/crypto-sa/frontend/src/pages/components/eth/EthSpark.js\";\n// ETH Page -- Sparkline\n// Author: Samuel Adamson\nimport axios from 'axios';\nimport { Component } from 'react';\nimport { Container, ToggleButtonGroup, ToggleButton } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EthSpark extends Component {\n  constructor() {\n    super(); // Axios Promise\n\n    this.componentDidMount = () => {\n      this.storeData(); // Store Data for Sparklines\n\n      this.loadDay(); // Load one day data by default\n\n      console.log(this.state.series);\n    };\n\n    this.axPromise = null; // State Values -- Chart Data/Configuration\n\n    this.state = {\n      // ApexCharts options\n      options: {\n        chart: {\n          type: 'area',\n          toolbar: {\n            show: false\n          }\n        },\n        xaxis: {\n          show: false,\n          type: 'numeric'\n        },\n        yaxis: {\n          show: false\n        },\n        grid: {\n          show: false\n        }\n      },\n      series: []\n    };\n  }\n\n  // Get Data from backend\n  storeData() {\n    // Make request\n    const promise = axios.get('/ethSpark'); // Store promise result\n\n    this.axPromise = promise.then(response => response.data);\n  } // Load Chart Timeseries with 1 Day Data\n\n\n  loadDay() {\n    // Access promise data\n    this.axPromise.then(body => {\n      // Check not null\n      if (body) {\n        console.log(body['day']); // Store daydata in chart series\n\n        this.setState({\n          series: [{\n            data: body['day']\n          }]\n        });\n      } else {\n        // Null Response\n        console.log('Null Response!');\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // On Component Mount\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EthSpark spark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"pt-5 pb-5\",\n        children: [/*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          type: \"radio\",\n          name: \"options\",\n          defaultValue: 0,\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            id: \"tbg-radio-0\",\n            size: \"lg\",\n            value: 0,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" 1D \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 77\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            id: \"tbg-radio-1\",\n            size: \"lg\",\n            value: 1,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" 1W \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 77\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            id: \"tbg-radio-2\",\n            size: \"lg\",\n            value: 2,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" 1M \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 77\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            id: \"tbg-radio-3\",\n            size: \"lg\",\n            value: 3,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" 1Y \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 77\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: this.state.options,\n          series: this.state.series,\n          type: \"line\",\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EthSpark;","map":{"version":3,"sources":["/home/giibbu/crypto-sa/frontend/src/pages/components/eth/EthSpark.js"],"names":["axios","Component","Container","ToggleButtonGroup","ToggleButton","Chart","EthSpark","constructor","componentDidMount","storeData","loadDay","console","log","state","series","axPromise","options","chart","type","toolbar","show","xaxis","yaxis","grid","promise","get","then","response","data","body","setState","catch","error","render"],"mappings":"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","sourcesContent":["// ETH Page -- Sparkline\n// Author: Samuel Adamson\nimport axios from 'axios';\nimport { Component } from 'react';\nimport { Container, ToggleButtonGroup, ToggleButton } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\n\nclass EthSpark extends Component {\n    constructor() {\n        super();\n        // Axios Promise\n        this.axPromise = null;\n\n        // State Values -- Chart Data/Configuration\n        this.state = {\n            // ApexCharts options\n            options: {\n                chart: {\n                    type: 'area',\n                    toolbar: {\n                        show: false\n                    }\n                },\n                xaxis: {\n                    show: false,\n                    type: 'numeric'\n                },\n                yaxis: {\n                    show: false\n                },\n                grid: {\n                    show: false\n                }\n            },\n            series: []\n        };\n    };\n\n    // Get Data from backend\n    storeData() {\n        // Make request\n        const promise = axios.get('/ethSpark');\n        // Store promise result\n        this.axPromise = promise.then((response) => response.data);\n    }\n\n    // Load Chart Timeseries with 1 Day Data\n    loadDay() {\n        // Access promise data\n        this.axPromise.then(body => {\n            // Check not null\n            if(body) {\n                console.log(body['day']);\n                // Store daydata in chart series\n                this.setState({\n                    series: [{\n                        data: body['day']\n                    }]\n                });\n            } else { // Null Response\n                console.log('Null Response!');\n            }\n\n        })\n        .catch(function(error) {\n            console.log(error);\n        });\n    }\n\n    // On Component Mount\n    componentDidMount = () => {\n        this.storeData(); // Store Data for Sparklines\n        this.loadDay();   // Load one day data by default\n        console.log(this.state.series);\n    };\n\n    render() {\n        return(\n            <div className=\"EthSpark spark\">\n                <Container className=\"pt-5 pb-5\">\n                    <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={0}>\n                        <ToggleButton id=\"tbg-radio-0\" size=\"lg\" value={0}> <strong> 1D </strong> </ToggleButton>\n                        <ToggleButton id=\"tbg-radio-1\" size=\"lg\" value={1}> <strong> 1W </strong> </ToggleButton>\n                        <ToggleButton id=\"tbg-radio-2\" size=\"lg\" value={2}> <strong> 1M </strong> </ToggleButton>\n                        <ToggleButton id=\"tbg-radio-3\" size=\"lg\" value={3}> <strong> 1Y </strong> </ToggleButton>\n                    </ToggleButtonGroup>\n\n                    <Chart \n                        options={this.state.options}\n                        series={this.state.series}\n                        type=\"line\"\n                        width=\"100%\" \n                    />\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default EthSpark;"]},"metadata":{},"sourceType":"module"}