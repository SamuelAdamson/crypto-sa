{"ast":null,"code":"var _jsxFileName = \"/home/giibbu/crypto-sa/frontend/src/pages/components/eth/EthSpark.js\";\n// ETH Page -- Sparkline\n// Author: Samuel Adamson\nimport axios from 'axios';\nimport { Component } from 'react';\nimport { Container, ToggleButtonGroup, ToggleButton } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EthSpark extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      this.storeData(); // Store Data for Sparklines\n\n      this.chartData('day'); // Chart Data (First time)\n    };\n\n    this.state = {\n      // Data from API\n      dayData: {},\n      weekData: {},\n      monthData: {},\n      yearData: {},\n      // Options Configuration (Day)\n      dayOps: {\n        responsive: true,\n        legend: {\n          display: false\n        },\n        elements: {\n          line: {\n            borderColor: 'rgba(128, 43, 177, 1)',\n            borderWidth: 2\n          },\n          point: {\n            radius: 1\n          }\n        },\n        tooltips: {\n          enabled: false\n        },\n        scales: {\n          yAxes: [{\n            display: false\n          }],\n          xAxes: [{\n            display: false\n          }]\n        }\n      },\n      // Options Configuration (Week)\n      weekOps: {},\n      // Options Configuration (Month)\n      monthOps: {},\n      // Options Configuration (Year)\n      yearOps: {},\n      // Configs for currently shown chart\n      chartData: {},\n      chartOps: {}\n    };\n  }\n\n  // Get Data from backend\n  storeData() {\n    // Make request\n    axios.get('/ethSpark').then(response => {\n      // Story response body\n      let body = response['data']; // Check not null\n\n      if (body) {\n        // Store day, week, month, year data\n        this.setState({\n          dayData: {\n            labels: body['day']['labels'],\n            datasets: [{\n              label: 'Dataset',\n              data: body['day']['data'],\n              fill: false,\n              backgroundColor: 'transparent',\n              borderColor: 'rgba(128, 43, 177, 1)'\n            }]\n          }\n        });\n      } else {\n        console.log('Null Response!');\n        this.setState({\n          // Set all to null\n          dayData: null,\n          weekData: null,\n          monthData: null,\n          yearData: null,\n          dayOps: null,\n          weekOps: null,\n          monthOps: null,\n          yearOps: null,\n          chartData: null,\n          chartOps: null\n        });\n      }\n    }).catch(function (error) {\n      // Log Error\n      console.log(error);\n      this.setState({\n        // Set all to null\n        dayData: null,\n        weekData: null,\n        monthData: null,\n        yearData: null,\n        dayOps: null,\n        weekOps: null,\n        monthOps: null,\n        yearOps: null,\n        chartData: null,\n        chartOps: null\n      });\n    });\n  } // Chart Data\n\n\n  chartData(type) {\n    if (type === 'day') {\n      console.log(this.state.dayData.labels);\n      this.setState(state => ({\n        chartData: state.dayData\n      }));\n      console.log(this.state.dayData.labels);\n    }\n  } // On Component Mount\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EthSpark spark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          type: \"radio\",\n          name: \"options\",\n          defaultValue: 0,\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            id: \"tbg-radio-0\",\n            size: \"lg\",\n            value: 0,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" 1D \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 77\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            id: \"tbg-radio-1\",\n            size: \"lg\",\n            value: 1,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" 1W \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 77\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            id: \"tbg-radio-2\",\n            size: \"lg\",\n            value: 2,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" 1M \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 77\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            id: \"tbg-radio-3\",\n            size: \"lg\",\n            value: 3,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" 1Y \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 77\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: this.state.chartData,\n          options: this.state.chartOps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EthSpark;","map":{"version":3,"sources":["/home/giibbu/crypto-sa/frontend/src/pages/components/eth/EthSpark.js"],"names":["axios","Component","Container","ToggleButtonGroup","ToggleButton","Line","EthSpark","constructor","componentDidMount","storeData","chartData","state","dayData","weekData","monthData","yearData","dayOps","responsive","legend","display","elements","line","borderColor","borderWidth","point","radius","tooltips","enabled","scales","yAxes","xAxes","weekOps","monthOps","yearOps","chartOps","get","then","response","body","setState","labels","datasets","label","data","fill","backgroundColor","console","log","catch","error","type","render"],"mappings":"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","sourcesContent":["// ETH Page -- Sparkline\n// Author: Samuel Adamson\nimport axios from 'axios';\nimport { Component } from 'react';\nimport { Container, ToggleButtonGroup, ToggleButton } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nclass EthSpark extends Component {\n    constructor() {\n        super();\n        this.state = {\n            // Data from API\n            dayData: {},\n            weekData: {},\n            monthData: {},\n            yearData: {},\n            // Options Configuration (Day)\n            dayOps: {\n                responsive: true,\n                legend: { display: false },\n                elements: {\n                    line: {\n                        borderColor: 'rgba(128, 43, 177, 1)',\n                        borderWidth: 2\n                    },\n                    point: { radius: 1 }\n                },\n                tooltips: { enabled: false },\n                scales: {\n                    yAxes: [{ display: false }],\n                    xAxes: [{ display: false }]\n                }\n            },\n            // Options Configuration (Week)\n            weekOps: {},\n            // Options Configuration (Month)\n            monthOps: {},\n            // Options Configuration (Year)\n            yearOps: {},\n            // Configs for currently shown chart\n            chartData: {}, chartOps: {}\n        };\n    };\n\n    // Get Data from backend\n    storeData() {\n        // Make request\n        axios\n            .get('/ethSpark')\n            .then(response => {\n                // Story response body\n                let body = response['data'];\n                \n                // Check not null\n                if(body) {\n\n                    // Store day, week, month, year data\n                    this.setState({\n                        dayData: {\n                            labels: body['day']['labels'],\n                            datasets: [{\n                                label: 'Dataset',\n                                data: body['day']['data'],\n                                fill: false,\n                                backgroundColor: 'transparent',\n                                borderColor: 'rgba(128, 43, 177, 1)'\n                            }]\n                        },\n                    }); \n\n                } else {\n                    console.log('Null Response!');\n                    this.setState({\n                        // Set all to null\n                        dayData: null, weekData: null, monthData: null, yearData: null,\n                        dayOps: null, weekOps: null, monthOps: null, yearOps: null,\n                        chartData: null, chartOps: null\n                    });   \n                }\n\n            })\n            .catch( function(error) {\n                // Log Error\n                console.log(error);\n                this.setState({\n                    // Set all to null\n                    dayData: null, weekData: null, monthData: null, yearData: null,\n                    dayOps: null, weekOps: null, monthOps: null, yearOps: null,\n                    chartData: null, chartOps: null\n                });\n            });\n    }\n\n    // Chart Data\n    chartData(type) {\n        if(type === 'day') {\n            console.log(this.state.dayData.labels);\n            this.setState((state) => ({ chartData: state.dayData }));\n            console.log(this.state.dayData.labels);\n        }\n    }\n\n    // On Component Mount\n    componentDidMount = () => {\n        this.storeData(); // Store Data for Sparklines\n        this.chartData('day'); // Chart Data (First time)\n    };\n\n    render() {\n        return(\n            <div className=\"EthSpark spark\">\n                <Container>\n                    <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={0}>\n                        <ToggleButton id=\"tbg-radio-0\" size=\"lg\" value={0}> <strong> 1D </strong> </ToggleButton>\n                        <ToggleButton id=\"tbg-radio-1\" size=\"lg\" value={1}> <strong> 1W </strong> </ToggleButton>\n                        <ToggleButton id=\"tbg-radio-2\" size=\"lg\" value={2}> <strong> 1M </strong> </ToggleButton>\n                        <ToggleButton id=\"tbg-radio-3\" size=\"lg\" value={3}> <strong> 1Y </strong> </ToggleButton>\n                    </ToggleButtonGroup>\n\n                    <Line data={this.state.chartData} options={this.state.chartOps} />\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default EthSpark;"]},"metadata":{},"sourceType":"module"}